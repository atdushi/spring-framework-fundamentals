<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"

       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--    data sources-->
    <!--    <bean id="jndiDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">-->
    <!--        &lt;!&ndash;из glassfish&ndash;&gt;-->
    <!--        <property name="jndiName" value="jdbc/Books"/>-->
    <!--    </bean>-->

    <!--    https://docs.spring.io/spring-framework/docs/4.0.2.RELEASE/javadoc-api/-->
    <!--    <bean id="simpleDriverDataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">-->
    <!--        <property name="driverClass" value="org.hsqldb.jdbcDriver"/>-->
    <!--        <property name="url" value="jdbc:hsqldb:file:database.dat;shutdown=true"/>-->
    <!--        <property name="username" value="sa"/>-->
    <!--        <property name="password" value=""/>-->
    <!--    </bean>-->

    <!--    https://javadoc.io/doc/commons-dbcp/commons-dbcp/1.4/index.html-->
    <bean id="basicDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
        <property name="url" value="jdbc:hsqldb:file:database.dat;shutdown=true"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <!--    templates-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="basicDataSource"/>
    </bean>

    <!-- Transaction Manager for the Project -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          autowire="byType">
        <!--        <property name="dataSource" ref="basicDataSource"/>-->
    </bean>

    <!--    dao beans-->
    <bean id="bookDao" class="com.virtualpairprogrammers.avalon.data.BookDaoCleanerJdbcImpl" init-method="createTables">
        <constructor-arg ref="jdbcTemplate"/>
    </bean>

    <!--    service beans-->
    <bean id="bookService" class="com.virtualpairprogrammers.avalon.services.BookServiceProductionImpl">
        <constructor-arg ref="bookDao"/>
    </bean>

    <bean id="accountService" class="com.virtualpairprogrammers.avalon.services.AccountsServiceMockImpl"/>

    <bean id="purchasingService"
          class="com.virtualpairprogrammers.avalon.services.PurchasingServiceImpl"
          lazy-init="true">

        <constructor-arg ref="accountService"/>
        <constructor-arg ref="bookService"/>
    </bean>

    <!-- Advice -->
    <bean id="loggingAdvice" class="com.virtualpairprogrammers.avalon.advice.SimpleLoggingAdvice"/>

    <bean id="performanceTimingAdviceOld" class="com.virtualpairprogrammers.avalon.advice.PerformanceTimingAdviceOld"/>

    <bean id="performanceTimingAdvice" class="com.virtualpairprogrammers.avalon.advice.PerformanceTimingAdvice"/>

    <!--  Tells spring to search for AOP annotations -->
    <aop:aspectj-autoproxy/>

    <!--    Добавлено в Spring 2. Предпочтительный вариант-->
    <!--    <aop:config>-->
    <!--        <aop:pointcut id="allServiceMethodsThatReturnLists"-->
    <!--                      expression="execution (java.util.List com.virtualpairprogrammers.avalon.services.*.* (..) )"/>-->
    <!--        <aop:aspect ref="performanceTimingAdvice">-->
    <!--            <aop:around method="performTimingMeasurement"-->
    <!--                        pointcut="execution (* com.virtualpairprogrammers.avalon.services.*.* (..) )"/>-->
    <!--            <aop:before method="beforeAdviceTesting" pointcut-ref="allServiceMethodsThatReturnLists"/>-->
    <!--        </aop:aspect>-->
    <!--    </aop:config>-->

    <!-- Generated Proxies (old style)-->
    <!--        <bean id="bookServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">-->
    <!--            <property name="proxyInterfaces" value="com.virtualpairprogrammers.avalon.services.BookService"/>-->
    <!--            <property name="interceptorNames">-->
    <!--                <list>-->
    <!--                    <value>performanceTimingAdviceOld</value>-->
    <!--                </list>-->
    <!--            </property>-->
    <!--            <property name="target" ref="bookService"/>-->
    <!--        </bean>-->

    <!--  Transaction Configuration -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--    config via xml rather than annotations-->
    <!--    <tx:advice id="allMethodsToBeTransactional">-->
    <!--        <tx:attributes>-->
    <!--            <tx:method name="*"/>-->
    <!--        </tx:attributes>-->
    <!--    </tx:advice>-->

    <!--    <aop:config>-->
    <!--        <aop:advisor advice-ref="allMethodsToBeTransactional"-->
    <!--                     pointcut="execution(* com.virtualpairprogrammers.avalon.services..*.*(..))"/>-->
    <!--    </aop:config>-->
</beans>

