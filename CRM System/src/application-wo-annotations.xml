<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"

       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--data source-->
    <bean id="basicDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
        <property name="url" value="jdbc:hsqldb:file:database.dat;shutdown=true"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <!--    template-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="basicDataSource"/>
    </bean>

    <!--    dao-->
    <bean id="customerDao" class="com.virtualpairprogrammers.dataaccess.CustomerDaoJdbcTemplateImpl"
          init-method="createTables">
        <constructor-arg ref="jdbcTemplate"/>
    </bean>

    <bean id="actionDao" class="com.virtualpairprogrammers.dataaccess.ActionDaoJdbcImpl" init-method="createTables">
        <constructor-arg ref="jdbcTemplate"/>
    </bean>

    <!-- Transaction Manager for the Project -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="basicDataSource"/>
    </bean>

    <!--    services-->
    <bean id="customerService"
          class="com.virtualpairprogrammers.services.customers.CustomerManagementServiceProductionImpl">
        <!--        <constructor-arg ref="customerDao"/>-->
    </bean>

    <bean id="diaryService" class="com.virtualpairprogrammers.services.diary.DiaryManagementServiceProductionImpl">
        <!--        <constructor-arg ref="actionDao"/>-->
    </bean>

    <bean id="callHandlingService" class="com.virtualpairprogrammers.services.calls.CallHandlingServiceImpl">
        <!--        <constructor-arg ref="customerService"/>-->
        <!--        <constructor-arg ref="diaryService"/>-->
    </bean>

    <!-- Advice -->

    <bean id="performanceTimingAdvice" class="com.virtualpairprogrammers.advice.PerformanceTimingAdvice"/>

    <!--    Добавлено в Spring 2. Предпочтительный вариант-->
    <aop:config>
        <aop:pointcut id="allServiceMethodsThatReturnLists"
                      expression="execution (java.util.List com.virtualpairprogrammers.services.*.* (..) )"/>
        <aop:aspect ref="performanceTimingAdvice">
            <aop:around method="recordTiming"
                        pointcut="execution ( * com.virtualpairprogrammers.services..*.* (..) )
						       || execution ( * com.virtualpairprogrammers.dataaccess.*.* (..) )"/>
            <aop:before method="beforeAdviceTesting" pointcut-ref="allServiceMethodsThatReturnLists"/>
        </aop:aspect>
    </aop:config>

    <!--  Transaction Configuration -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>
